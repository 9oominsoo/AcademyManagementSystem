<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="course">
	
	<!-- 쿼리문 작성 -->
	
	<!-- select 예제 -->
	<select id="selectCourseByPath" parameterType="String" resultType="CourseVo">
		<![CDATA[
			SELECT   courseNo, 
					 courseName, 
					 lecRoomNo, 
					 TO_CHAR(startDate, 'yyyy/mm/dd') as startDate,
					 TO_CHAR(endDate, 'yyyy/mm/dd') as endDate,
					 teacherNo,
					 managerNo,
					 coursePath
			FROM     course 
			WHERE    coursePath = #{coursePath}
		]]>
	</select>
	
	<select id="selectCourseRegist" parameterType="map" resultType="CourseRegistVo">
		<![CDATA[
			SELECT   registNo, 
					 userNo, 
					 courseNo, 
					 seatNo
			FROM     courseregist
			WHERE    userNo = #{userNo}
				AND	 courseNo = #{courseNo}
		]]>
	</select>
	
	<select id="selectSubjectListByCourseNo" parameterType="int" resultType="SubjectVo">
		<![CDATA[
			SELECT   subjectNo,
					 subjectTitle,
					 courseNo,
					 scheduleNo
			FROM	 subject
			WHERE	 courseNo = #{courseNo}
			ORDER BY subjectNo ASC
		]]>
	</select>
	
	<select id="selectSubjectListPlusDateByCourseNo" parameterType="int" resultType="SubjectVo">
		<![CDATA[
			SELECT   subjectNo,
					 subjectTitle,
					 sj.courseNo,
					 sj.scheduleNo,
					 TO_CHAR(startDate, 'yyyy-mm-dd') as startDate,
					 TO_CHAR(endDate, 'yyyy-mm-dd') as endDate
			FROM	 subject sj JOIN schedule sd
					 ON sj.scheduleNo = sd.scheduleNo
			WHERE	 sj.courseNo = #{courseNo}
			ORDER BY startDate ASC
		]]>
	</select>
	
	<select id="selectChapterListBysubjectNo" parameterType="int" resultType="ChapterVo">
		<![CDATA[
			SELECT 		chapterNo,
       					chapterContent,
       					subjectNo
			FROM   		chapter
			WHERE  		subjectNo = #{subjectNo}
			ORDER BY 	chapterNo ASC
			
		]]>
	</select>
	
	<update id="updateChapterByChapterNo" parameterType="map">
		<![CDATA[
			UPDATE 	 chapter 
			SET 	 chapterContent = #{chapterContent}
			WHERE 	 chapterNo = #{chapterNo}
		]]>
	</update>
	
	<select id="selectChapterByChapterNo" parameterType="int" resultType="ChapterVo">
		<![CDATA[
			SELECT 		chapterNo,
       					chapterContent,
       					subjectNo
			FROM   		chapter
			WHERE  		chapterNo = #{chapterNo}
		]]>
	</select>
	
	<update id="updateSubjectBySubjectVo" parameterType="SubjectVo">
		<![CDATA[
			UPDATE 	 subject 
			SET 	 subjectTitle = #{subjectTitle}
			WHERE 	 subjectNo = #{subjectNo}
		]]>
	</update>
	
	<update id="updateScheduleBySubjectVo" parameterType="SubjectVo">
		<![CDATA[
			UPDATE 	 schedule 
			SET 	 scheduleName = #{subjectTitle},
					 startDate = #{startDate},
					 endDate = #{endDate},
					 scheduleMemo = #{scheduleMemo}
			WHERE 	 scheduleNo = #{scheduleNo}
		]]>
	</update>
	
	<update id="updateCourseregistByMap" parameterType="map">
		<![CDATA[
			UPDATE 	 courseregist 
			SET 	 seatNo = #{seatNo}
			WHERE 	 userNo = #{userNo}
				AND	 courseNo = #{courseNo}
		]]>
	</update>
	
	<select id="selectSubjectBySubjectNo" parameterType="int" resultType="SubjectVo">
		<![CDATA[
			SELECT   subjectNo,
					 subjectTitle,
					 sj.courseNo,
					 sj.scheduleNo,
					 TO_CHAR(startDate, 'yyyy-mm-dd') as startDate,
					 TO_CHAR(endDate, 'yyyy-mm-dd') as endDate,
					 scheduleMemo
			FROM	 subject sj JOIN schedule sd
					 ON sj.scheduleNo = sd.scheduleNo
			WHERE	 subjectNo = #{subjectNo}
		]]>
	</select>
	
	<insert id="insertScheduleBySubjectVo" parameterType="SubjectVo">
		<selectKey keyProperty="scheduleNo" resultType="int" order="BEFORE">
			SELECT seq_schedule_no.nextval FROM dual
		</selectKey>
		<![CDATA[
			INSERT INTO schedule(	scheduleNo,
	    							scheduleName,
	    							startDate,
	    							endDate,
	    							eventColor,
	    							courseNo,
	    							userNo,
	    							scheduleMemo)
			VALUES (
	    							#{scheduleNo},
	    							#{subjectTitle}, 
	    							#{startDate},
	    							#{endDate},
	    							'dark',
	    							#{courseNo},
	    							#{userNo},
	    							#{scheduleMemo})
		]]>
	</insert>
	
	<insert id="insertSubjectBySubjectVo" parameterType="SubjectVo">
		<![CDATA[
			INSERT INTO subject(	subjectNo,
	    							subjectTitle,
	    							courseNo,
	    							scheduleNo)
			VALUES (
	    							seq_subject_no.nextval,
	    							#{subjectTitle}, 
	    							#{courseNo},
	    							#{scheduleNo})
		]]>
	</insert>
	
	<insert id="insertChapterByChapterVo" parameterType="ChapterVo">
		<selectKey keyProperty="chapterNo" resultType="int" order="BEFORE">
			SELECT seq_chapter_no.nextval FROM dual
		</selectKey>
		<![CDATA[
			INSERT INTO chapter(	chapterNo,
	    							chapterContent,
	    							subjectNo)
			VALUES (
	    							#{chapterNo},
	    							#{chapterContent}, 
	    							#{subjectNo})
		]]>
	</insert>
	
	<delete id="deleteScheduleByScheduleNo" parameterType="int">
		<![CDATA[
			DELETE FROM schedule
			WHERE scheduleNo = #{scheduleNo}
		]]>
	</delete>
	
	<delete id="deleteSubjectBySubjectNo" parameterType="int">
		<![CDATA[
			DELETE FROM subject
			WHERE subjectNo = #{subjectNo}
		]]>
	</delete>
	
	<delete id="deleteChapterBySubjectNo" parameterType="int">
		<![CDATA[
			DELETE FROM chapter
			WHERE subjectNo = #{subjectNo}
		]]>
	</delete>
	
	<delete id="deleteChapterByChapterNo" parameterType="int">
		<![CDATA[
			DELETE FROM chapter
			WHERE chapterNo = #{chapterNo}
		]]>
	</delete>
	
	<select id="selectUserListByCourseNo" parameterType="int" resultType="UserVo">
		<![CDATA[
			SELECT 		u.userNo,
       					userName,
       					userType,
       					logoPath,
       					NVL(seatNo, 0) as seatNo
			FROM   		users u JOIN courseregist c
				ON		u.userNo = c.userNo
			WHERE  		courseNo = #{courseNo}
			
		]]>
	</select>
	
	<select id="selectUserVoByUserNo" parameterType="int" resultType="UserVo">
		<![CDATA[
			SELECT userNo,
				   email,
				   userName,
				   userType,
				   logoPath,
				   phoneNumber,
				   ((SELECT COUNT(postNo) FROM   post WHERE  post.userNo = #{userNo}) + 
                    (SELECT COUNT(assignmentNo) FROM assignment WHERE assignment.teacherno = #{userNo}) + 
                    (SELECT COUNT(submitNo) FROM submit WHERE submit.userno = #{userNo})) as postCnt
			FROM users
			where userNo = #{userNo}
		]]>
	</select>
</mapper>
